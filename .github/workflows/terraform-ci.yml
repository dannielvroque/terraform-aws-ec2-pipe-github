name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: # Para permitir a execução manual do destroy

jobs:
  terraform_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # Garantir que o apply seja apenas no push

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Inicializar Terraform
        run: terraform init

      - name: Validar Terraform
        run: terraform validate

      - name: Aplicar Terraform
        if: github.ref == 'refs/heads/main' # Aplica apenas quando há push para a branch main
        run: terraform apply -auto-approve

  terraform_destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Só rodar o destroy se for disparado manualmente

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Inicializar Terraform
        run: terraform init

      - name: Validar Terraform
        run: terraform validate

      - name: Destruir recursos em us-east-1
        run: terraform destroy -auto-approve

      - name: Destruir recursos em sa-east-1
        run: terraform destroy -auto-approve
